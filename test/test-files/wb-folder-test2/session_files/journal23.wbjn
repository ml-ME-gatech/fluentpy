# encoding: utf-8
# Release 19.1
SetScriptVersion(Version="19.1.103")
system1 = GetSystem(Name="FFF 21")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Report Files\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*Table1*Table4*PushButton1( Add>>)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1 2))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 3))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 0.0001))(cx-gui-do cx-set-integer-entry \"Convergence Conditions*Table1*IntegerEntry13\" 25)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*IntegerEntry13\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 25)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 25)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions|report-convergence-0 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions|report-convergence-0 (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Convergence Conditions|report-convergence-0 (Invalid)\"))(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList11\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList11")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList19\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList19")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList27\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList27")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system2 = GetSystem(Name="FFF 24")
setup2 = system2.GetContainer(ComponentName="Setup")
fluentLauncherSettings2 = setup2.GetFluentLauncherSettings()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*Table1*Table4*PushButton1( Add>>)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 0 1))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 0 1 2))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1 2))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 3))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry13" 25)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry13")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 25)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 25)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList11\" '( 0))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList11")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList19\" '( 3))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList19")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList27\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList27")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-use-window-id 3)')
system3 = GetSystem(Name="FFF 27")
setup3 = system3.GetContainer(ComponentName="Setup")
fluentLauncherSettings3 = setup3.GetFluentLauncherSettings()
fluentLauncherSettings3.SetEntityProperties(Properties=Set(EnvPath={}))
setup3.Edit()
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton2(Cancel)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*Table1*Table4*PushButton1( Add>>)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 0 1))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1 2))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 3))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList11\" '( 1))")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList11")')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList19\" '( 0))")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList19")')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList27\" '( 3))")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList27")')
setup3.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 0.0001))(cx-gui-do cx-set-integer-entry \"Convergence Conditions*Table1*IntegerEntry13\" 25)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*IntegerEntry13\")")
setup3.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 25)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup3.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 25)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 3)')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system4 = GetSystem(Name="FFF 3")
results1 = system4.GetContainer(ComponentName="Results")
results1.Edit()
results1.Exit()
Save(Overwrite=True)
