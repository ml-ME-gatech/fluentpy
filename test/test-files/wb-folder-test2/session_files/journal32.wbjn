# encoding: utf-8
# Release 19.1
SetScriptVersion(Version="19.1.103")
system1 = GetSystem(Name="FFF 19")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-07))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry47\" '( 0.0001))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 3))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*Table1*Table4*PushButton1( Add>>)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1 2))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)" #t)(cx-gui-do cx-activate-item "New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)")(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 3))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Convergence Conditions*Create/Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList11\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList11")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList19\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList19")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList27\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList27")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 1e-05))(cx-gui-do cx-set-integer-entry \"Convergence Conditions*Table1*IntegerEntry13\" 300)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*IntegerEntry13\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry14" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry14")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry30" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry30")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton15" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton15")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton23" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton23")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton31" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton31")(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"console_output\") \"Transcript Files (*.trn *.out )\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system2 = GetSystem(Name="FFF 20")
setup2 = system2.GetContainer(ComponentName="Setup")
fluentLauncherSettings2 = setup2.GetFluentLauncherSettings()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-07))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry47\" '( 0.0001))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*Table1*Table4*PushButton1( Add>>)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "New Report File*Table1*CheckButton8(Print to Console)" #t)(cx-gui-do cx-activate-item "New Report File*Table1*CheckButton8(Print to Console)")(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1 2))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 3))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList11\" '( 0))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList11")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList19\" '( 3))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList19")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList27\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList27")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 1e-05))(cx-gui-do cx-set-integer-entry \"Convergence Conditions*Table1*IntegerEntry13\" 300)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*IntegerEntry13\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry14" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry14")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry30" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry30")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton15" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton15")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton23" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton23")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton31" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton31")(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"console_output\") \"Transcript Files (*.trn *.out )\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system3 = GetSystem(Name="FFF 21")
setup3 = system3.GetContainer(ComponentName="Setup")
fluentLauncherSettings3 = setup3.GetFluentLauncherSettings()
fluentLauncherSettings3.SetEntityProperties(Properties=Set(EnvPath={}))
setup3.Edit()
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-activate-item "Question*OK")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry13" 24)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry13")')
setup3.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry13" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry13")')
setup3.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup3.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup3.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry14" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry14")')
setup3.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup3.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry30" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry30")')
setup3.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton15" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton15")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton23" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton23")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton31" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton31")(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Residual*Edit...")')
setup3.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-07))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry47\" '( 0.0001))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Convergence Conditions*Create/Edit...")')
setup3.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 1e-05))(cx-gui-do cx-activate-item \"Convergence Conditions*PanelButtons*PushButton1(OK)\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 2)')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system4 = GetSystem(Name="FFF 22")
solution1 = system4.GetContainer(ComponentName="Solution")
solution1.Edit()
setup4 = system4.GetContainer(ComponentName="Setup")
setup4.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup4.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup4.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Convergence Conditions\"))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 1e-05))(cx-gui-do cx-set-integer-entry \"Convergence Conditions*Table1*IntegerEntry13\" 300)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*IntegerEntry13\")")
setup4.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup4.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup4.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup4.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup4.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup4.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup4.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup4.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup4.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system5 = GetSystem(Name="FFF 23")
setup5 = system5.GetContainer(ComponentName="Setup")
fluentLauncherSettings4 = setup5.GetFluentLauncherSettings()
fluentLauncherSettings4.SetEntityProperties(Properties=Set(EnvPath={}))
setup5.Edit()
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Residual*Edit...")')
setup5.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-07))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry47\" '( 0.0001))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup5.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 1))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1 3))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")")
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*Table1*Table4*PushButton1( Add>>)")')
setup5.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "New Report File*Table1*CheckButton8(Print to Console)" #t)(cx-gui-do cx-activate-item "New Report File*Table1*CheckButton8(Print to Console)")(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup5.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1 2))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup5.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)" #t)(cx-gui-do cx-activate-item "New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)")(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup5.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 3))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Cell Registers"))')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Cell Registers"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions""Solution|Cell Registers"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "Manage Cell Registers*PanelButtons*PushButton1(Close)")')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup5.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 1e-05))(cx-gui-do cx-set-integer-entry \"Convergence Conditions*Table1*IntegerEntry13\" 300)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*IntegerEntry13\")")
setup5.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup5.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup5.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry14" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry14")')
setup5.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup5.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry30" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry30")')
setup5.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Convergence Conditions*Table1*CheckButton15\" #t)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*CheckButton15\")(cx-gui-do cx-set-toggle-button2 \"Convergence Conditions*Table1*CheckButton23\" #t)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*CheckButton23\")(cx-gui-do cx-set-toggle-button2 \"Convergence Conditions*Table1*CheckButton31\" #t)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*CheckButton31\")(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList11\" '( 0))")
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList11")')
setup5.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList19\" '( 1))")
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList19")')
setup5.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList27\" '( 3))")
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList27")')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup5.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-activate-item "Question*OK")')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup5.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system6 = GetSystem(Name="FFF 25")
setup6 = system6.GetContainer(ComponentName="Setup")
fluentLauncherSettings5 = setup6.GetFluentLauncherSettings()
fluentLauncherSettings5.SetEntityProperties(Properties=Set(EnvPath={}))
setup6.Edit()
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup6.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-07))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry47\" '( 0.0001))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup6.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")")
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*Table1*Table4*PushButton1( Add>>)")')
setup6.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "New Report File*Table1*CheckButton8(Print to Console)" #t)(cx-gui-do cx-activate-item "New Report File*Table1*CheckButton8(Print to Console)")(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup6.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '())(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1 2))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup6.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)" #t)(cx-gui-do cx-activate-item "New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)")(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup6.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 3))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup6.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 1e-05))(cx-gui-do cx-set-integer-entry \"Convergence Conditions*Table1*IntegerEntry13\" 300)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*IntegerEntry13\")")
setup6.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup6.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup6.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry14" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry14")')
setup6.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup6.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry30" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry30")')
setup6.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Convergence Conditions*Table1*CheckButton15\" #t)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*CheckButton15\")(cx-gui-do cx-set-toggle-button2 \"Convergence Conditions*Table1*CheckButton23\" #t)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*CheckButton23\")(cx-gui-do cx-set-toggle-button2 \"Convergence Conditions*Table1*CheckButton31\" #t)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*CheckButton31\")(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList11\" '( 0))")
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList11")')
setup6.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList19\" '( 1))")
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList19")')
setup6.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList27\" '( 3))")
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList27")')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup6.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"console_output\") \"Transcript Files (*.trn *.out )\")")
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup6.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-activate-item "Question*OK")')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup6.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system7 = GetSystem(Name="FFF 26")
setup7 = system7.GetContainer(ComponentName="Setup")
fluentLauncherSettings6 = setup7.GetFluentLauncherSettings()
fluentLauncherSettings6.SetEntityProperties(Properties=Set(EnvPath={}))
setup7.Edit()
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup7.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-07))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry47\" '( 0.0001))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup7.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")")
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*Table1*Table4*PushButton1( Add>>)")')
setup7.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "New Report File*Table1*CheckButton8(Print to Console)" #t)(cx-gui-do cx-activate-item "New Report File*Table1*CheckButton8(Print to Console)")(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup7.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 0 1))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 1))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup7.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup7.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)" #t)(cx-gui-do cx-activate-item "New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)")(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup7.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 3))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")(cx-gui-do cx-set-toggle-button2 \"New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)\" #t)(cx-gui-do cx-activate-item \"New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)\")(cx-gui-do cx-activate-item \"New Report Plot*PanelButtons*PushButton1(OK)\")")
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup7.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"console_output\") \"Transcript Files (*.trn *.out )\")")
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table2*PushButton1( Add)")')
setup7.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList11\" '( 1))")
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList11")')
setup7.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList19\" '( 0))")
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList19")')
setup7.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Convergence Conditions*Table1*DropDownList27\" '( 3))")
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*Table1*DropDownList27")')
setup7.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 1e-05))(cx-gui-do cx-set-integer-entry \"Convergence Conditions*Table1*IntegerEntry13\" 300)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*IntegerEntry13\")")
setup7.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup7.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup7.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry14" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry14")')
setup7.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup7.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry30" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry30")')
setup7.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton15" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton15")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton23" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton23")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton31" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton31")(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup7.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-activate-item "Question*Cancel")')
setup7.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-activate-item "Question*OK")')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup7.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system8 = GetSystem(Name="FFF 27")
solution2 = system8.GetContainer(ComponentName="Solution")
solution2.Edit()
setup8 = system8.GetContainer(ComponentName="Setup")
setup8.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup8.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup8.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry13" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry13")')
setup8.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 24)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup8.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup8.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup8.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry14" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry14")')
setup8.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton15" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton15")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton23" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton23")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton31" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton31")(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup8.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry30" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry30")')
setup8.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 1e-05))(cx-gui-do cx-activate-item \"Convergence Conditions*PanelButtons*PushButton1(OK)\")")
setup8.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup8.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup8.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-07))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry47\" '( 0.0001))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup8.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"console_output\") \"Transcript Files (*.trn *.out )\")")
setup8.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup8.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup8.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup8.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup8.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup8.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system9 = GetSystem(Name="FFF 28")
solution3 = system9.GetContainer(ComponentName="Solution")
solution3.Edit()
setup9 = system9.GetContainer(ComponentName="Setup")
setup9.SendCommand(Command="(cx-use-window-id 1)")
setup9.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"console_ouput\") \"Transcript Files (*.trn *.out )\")")
setup9.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup9.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup9.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry13" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry13")')
setup9.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup9.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup9.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton15" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton15")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton23" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton23")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton31" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton31")(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup9.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup9.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
system10 = GetSystem(Name="FFF")
solution4 = system10.GetContainer(ComponentName="Solution")
solution4.Edit()
setup10 = system10.GetContainer(ComponentName="Setup")
setup10.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup10.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup10.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton2(Cancel)")')
setup10.SendCommand(Command="(cx-use-window-id 1)")
setup10.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup9.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 2)')
system11 = GetSystem(Name="FFF 1")
solution5 = system11.GetContainer(ComponentName="Solution")
solution5.Edit()
setup11 = system11.GetContainer(ComponentName="Setup")
setup11.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup11.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup11.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry13" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry13")')
setup11.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup11.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup11.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton15" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton15")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton23" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton23")(cx-gui-do cx-set-toggle-button2 "Convergence Conditions*Table1*CheckButton31" #t)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*CheckButton31")(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 6)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup9.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup11.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup11.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup11.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup11.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup11.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton2(Cancel)")')
setup11.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"console_ouput\") \"Transcript Files (*.trn *.out )\")")
setup11.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup11.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup11.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup11.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup11.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup11.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system12 = GetSystem(Name="FFF 2")
solution6 = system12.GetContainer(ComponentName="Solution")
solution6.Edit()
setup12 = system12.GetContainer(ComponentName="Setup")
setup12.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup12.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup12.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry13" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry13")')
setup12.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup12.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup12.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup12.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup12.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup12.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup12.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 7)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup12.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup12.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup12.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup12.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-07))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry47\" '( 0.0001))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup12.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup12.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup12.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system13 = GetSystem(Name="FFF 3")
solution7 = system13.GetContainer(ComponentName="Solution")
solution7.Edit()
setup13 = system13.GetContainer(ComponentName="Setup")
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry13" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry13")')
setup13.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup13.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup13.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton1(OK)")')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup13.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup13.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup13.SendCommand(Command="(cx-use-window-id 3)")
setup13.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup13.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system14 = GetSystem(Name="FFF 4")
solution8 = system14.GetContainer(ComponentName="Solution")
solution8.Edit()
setup14 = system14.GetContainer(ComponentName="Setup")
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton2(Cancel)")')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|report-plot-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton2(Cancel)")')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry14" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry14")')
setup14.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry22" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry22")')
setup14.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry30" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry30")')
setup14.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Convergence Conditions*Table1*CheckButton15\" #t)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*CheckButton15\")(cx-gui-do cx-set-toggle-button2 \"Convergence Conditions*Table1*CheckButton23\" #t)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*CheckButton23\")(cx-gui-do cx-set-toggle-button2 \"Convergence Conditions*Table1*CheckButton31\" #t)(cx-gui-do cx-activate-item \"Convergence Conditions*Table1*CheckButton31\")(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry12\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry20\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Convergence Conditions*Table1*RealEntry28\" '( 1e-05))(cx-gui-do cx-activate-item \"Convergence Conditions*PanelButtons*PushButton1(OK)\")")
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup14.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup14.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup14.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup14.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system15 = GetSystem(Name="FFF 5")
solution9 = system15.GetContainer(ComponentName="Solution")
solution9.Edit()
setup15 = system15.GetContainer(ComponentName="Setup")
setup15.SendCommand(Command='(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup15.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup15.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry13" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry13")')
setup15.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup15.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup15.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry14" 10)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry14")')
setup15.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup15.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup15.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup15.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-07))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry47\" '( 0.0001))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup15.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup15.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup15.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup15.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup15.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup15.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system16 = GetSystem(Name="FFF 6")
solution10 = system16.GetContainer(ComponentName="Solution")
solution10.Edit()
setup16 = system16.GetContainer(ComponentName="Setup")
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton2(Cancel)")')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Convergence Conditions"))(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry13" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry13")')
setup16.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry21" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry21")')
setup16.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Convergence Conditions*Table1*IntegerEntry29" 300)(cx-gui-do cx-activate-item "Convergence Conditions*Table1*IntegerEntry29")')
setup16.SendCommand(Command='(cx-gui-do cx-activate-item "Convergence Conditions*PanelButtons*PushButton1(OK)")')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup16.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup16.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
